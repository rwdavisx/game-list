service: game-service

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

plugins:
  - serverless-offline

functions:
  gameRead:
    handler: api/game/index.gameRead
    events:
      - http:
          path: game/{id}
          method: get
          cors:
            origin: '*'
            headers:
            - Content-Type
            - X-Amz-Date
            - Authorization
            - X-Api-Key
            - X-Amz-Security-Token
            - X-Amz-User-Agent
            allowCredentials: true
  gameCreate:
    handler: api/game/index.gameCreate
    events:
    - http:
        path: game
        method: post
        cors:
          origin: '*'
          headers:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
          allowCredentials: true
  gameUpdate:
    handler: api/game/index.gameUpdate
    events:
    - http:
        path: game/{id}
        method: put
        cors:
          origin: '*'
          headers:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
          allowCredentials: true
  gameDelete:
    handler: api/game/index.gameDelete
    events:
    - http:
        path: game/{id}
        method: delete
        cors:
          origin: '*'
          headers:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
          allowCredentials: true
  gameList:
    handler: api/game/index.gameList
    events:
    - http:
        path: game
        method: get
        cors:
          origin: '*'
          headers:
          - Content-Type
          - X-Amz-Date
          - Authorization
          - X-Api-Key
          - X-Amz-Security-Token
          - X-Amz-User-Agent
          allowCredentials: true
resources:
  Resources:
    gamesTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}